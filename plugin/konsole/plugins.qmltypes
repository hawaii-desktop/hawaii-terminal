import QtQuick.tooling 1.1

// This file describes the plugin-supplied types contained in the library.
// It is used for QML tooling purposes only.
//
// This file was auto-generated with the command '/usr/lib/x86_64-linux-gnu/qt5/bin/qmlplugindump -notrelocatable org.kde.konsole 0.1 ../../../'.

Module {
    Component {
        name: "KSession"
        prototype: "QObject"
        exports: ["org.kde.konsole/KSession 0.1"]
        Property { name: "kbScheme"; type: "string" }
        Signal { name: "finished" }
        Signal {
            name: "copyAvailable"
            Parameter { type: "bool" }
        }
        Signal { name: "termGetFocus" }
        Signal { name: "termLostFocus" }
        Signal {
            name: "termKeyPressed"
            Parameter { type: "QKeyEvent"; isPointer: true }
        }
        Signal {
            name: "changedKeyBindings"
            Parameter { name: "kb"; type: "string" }
        }
        Method {
            name: "setKeyBindings"
            Parameter { name: "kb"; type: "string" }
        }
        Method {
            name: "setTitle"
            Parameter { name: "name"; type: "string" }
        }
        Method { name: "getShellPID"; type: "int" }
        Method {
            name: "changeDir"
            Parameter { name: "dir"; type: "string" }
        }
        Method {
            name: "sendText"
            Parameter { name: "text"; type: "string" }
        }
        Method {
            name: "sendKey"
            Parameter { name: "rep"; type: "int" }
            Parameter { name: "key"; type: "int" }
            Parameter { name: "mod"; type: "int" }
        }
    }
    Component {
        name: "KTerminalDisplay"
        defaultProperty: "data"
        prototype: "QQuickPaintedItem"
        exports: ["org.kde.konsole/KTerminal 0.1"]
        Property { name: "session"; type: "KSession"; isPointer: true }
        Property { name: "colorScheme"; type: "string" }
        Property { name: "font"; type: "QFont" }
        Property { name: "activeFocusOnClick"; type: "bool" }
        Property { name: "ShowIMEOnClick"; type: "bool" }
        Signal {
            name: "changedScheme"
            Parameter { name: "scheme"; type: "string" }
        }
        Signal {
            name: "changedAutoVKB"
            Parameter { name: "au"; type: "bool" }
        }
        Signal {
            name: "changedAutoFocus"
            Parameter { name: "au"; type: "bool" }
        }
        Signal { name: "clicked" }
        Signal {
            name: "keyPressedSignal"
            Parameter { name: "e"; type: "QKeyEvent"; isPointer: true }
        }
        Signal {
            name: "changedFontMetricSignal"
            Parameter { name: "height"; type: "int" }
            Parameter { name: "width"; type: "int" }
        }
        Signal {
            name: "changedContentSizeSignal"
            Parameter { name: "height"; type: "int" }
            Parameter { name: "width"; type: "int" }
        }
        Signal {
            name: "configureRequest"
            Parameter { name: "position"; type: "QPoint" }
        }
        Signal {
            name: "overrideShortcutCheck"
            Parameter { name: "keyEvent"; type: "QKeyEvent"; isPointer: true }
            Parameter { name: "override"; type: "bool&" }
        }
        Signal {
            name: "isBusySelecting"
            Parameter { type: "bool" }
        }
        Signal {
            name: "copyAvailable"
            Parameter { type: "bool" }
        }
        Signal { name: "termGetFocus" }
        Signal { name: "termLostFocus" }
        Signal {
            name: "changedSession"
            Parameter { name: "session"; type: "KSession"; isPointer: true }
        }
        Method { name: "forcedFocus" }
        Method {
            name: "setColorScheme"
            Parameter { name: "name"; type: "string" }
        }
        Method { name: "availableColorSchemes"; type: "QStringList" }
        Method {
            name: "click"
            Parameter { name: "x"; type: "double" }
            Parameter { name: "y"; type: "double" }
        }
        Method { name: "autoFocus"; type: "bool" }
        Method {
            name: "setAutoFocus"
            Parameter { name: "au"; type: "bool" }
        }
        Method { name: "autoVKB"; type: "bool" }
        Method {
            name: "setAutoVKB"
            Parameter { name: "au"; type: "bool" }
        }
        Method { name: "getVTFont"; type: "QFont" }
        Method {
            name: "setVTFont"
            Parameter { name: "font"; type: "QFont" }
        }
        Method { name: "scrollToEnd" }
        Method { name: "updateImage" }
        Method { name: "updateLineProperties" }
        Method { name: "copyClipboard" }
        Method { name: "pasteClipboard" }
        Method { name: "pasteSelection" }
        Method {
            name: "setFlowControlWarningEnabled"
            Parameter { name: "enabled"; type: "bool" }
        }
        Method { name: "flowControlWarningEnabled"; type: "bool" }
        Method {
            name: "bell"
            Parameter { name: "message"; type: "string" }
        }
        Method {
            name: "setBackgroundColor"
            Parameter { name: "color"; type: "QColor" }
        }
        Method {
            name: "setForegroundColor"
            Parameter { name: "color"; type: "QColor" }
        }
        Method { name: "selectionChanged" }
        Method {
            name: "setSession"
            Parameter { name: "session"; type: "KSession"; isPointer: true }
        }
        Method { name: "getSession"; type: "KSession*" }
    }
}
